<script>
// Find user's location and use it to center the map if you can.

//console.log start_lat;


</script>

<div id="map"></div>

<!-- The container div sits a bottom fixes.  But two sub divs use grid and wrap on collapse. -->

<div class="span4">
<!--  *************************************************************
      How can I get @user?  @current user.  Session controller?!!!
      ************************************************************* -->
  <% if @user %>
    <a href="#addLocation" role="button" class="btn btn-small btn-primary" data-toggle="modal"><i class="icon-plus"></i> Add Location</a>
    <a href="#" role="button" class="btn btn-small" data-toggle="modal"><i class="icon-map-marker"></i> My Locations</a>
    

  <% else %>
    <p>Log in to add a location!</p>
  <% end %>   
</div>

<div class="span4" id="tags">
  <div>
    <span>Select Filters: </span>
    <div>
      <span class="label"><i class="icon-remove"></i> Fun</span>
      <span class="label"><i class="icon-remove"></i> Beauty</span>
      <span class="label label-important"><i class="icon-ok"></i> Food</span>
      <span class="label label-important"><i class="icon-ok"></i> Culture</span>
      <span class="label"><i class="icon-remove"></i> Spiritual</span>
      <span class="label"><i class="icon-remove"></i> Music</span>
    </div>
  </div>
</div>   




<!-- Modal for Add New Location -->
<%= form_for [@user, @location] do |f| %>
<div id="addLocation" class="modal hide fade" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
  <div class="modal-header">
    <button type="button" class="close" data-dismiss="modal" aria-hidden="true">×</button>
    <h3 id="myModalLabel">Add a New Location</h3>
  </div> 
  <div class="modal-body">
    <p>Enter a name for this location.</p>
    <p>
      <!-- start form -->
      
        <% if @location.errors.any? %>
          <div id="error_explanation">
            <h2><%= pluralize(@location.errors.count, "error") %> prohibited this location from being saved:</h2>

            <ul>
            <% @location.errors.full_messages.each do |msg| %>
              <li><%= msg %></li>
            <% end %>
            </ul>
          </div>
        <% end %>

       <!--  <div class="field">
          <%= f.label :latitude %><br>
          <%= f.text_field :latitude %>
        </div>
        <div class="field">
          <%= f.label :longitude %><br>
          <%= f.text_field :longitude %>
        </div> -->
        <div class="field">
          <!-- maybe show name of location above name through map api -->
          <%= f.label :name %><br>
          <%= f.text_field :name %>
        </div>
        <!-- 
        <div class="actions">
          <%= f.submit :class => "btn btn-primary"%>
        </div> -->
      <!-- end form -->
    </p>
  </div>  
  <div class="modal-footer">
    <button class="btn" data-dismiss="modal" aria-hidden="true">Close</button>
    <%= f.submit :class => "btn btn-primary"%>
  </div>
</div>
<% end %>


<!-- Modal to show Location and it's posts -->
<div id="location_posts" class="modal hide fade" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
  <div class="modal-header">
    <button type="button" class="close" data-dismiss="modal" aria-hidden="true">×</button>
    <div><h3 id="location_title"></h3></div>
    
    <div id="div_list_ex"></div>
    <div id="loc_tag"></div>
   
    <div id="add_a_post">

      
      <!-- Start add post form -->
      <!-- ******** refactor this as a form.  This whacking way I did is creating problems. -->
      <div><strong>Add Comment</strong></div>
      <div class="my_input"><textarea rows="3" class="span5" id="user_comment"></textarea></div>
      
      <button id="add_comment_but" class="btn btn-primary btn-small">Add Comment</button>
     <!--  Below.  Little trick to make the add_comment_but fire on keypress of enter. -->
      <script type="text/javascript">
      $('#user_comment').keypress(function(event){
        if(event.keyCode == 13){
          $('#add_comment_but').click();
          $('#user_comment').val("");
        }
      });
      </script>
     
      <!-- End add post form -->
    </div>
  </div>
  <div class="modal-body">
   
    <div id="output_posts">
    
    </div>  
  </div>
  <div class="modal-footer">
    <button class="btn" data-dismiss="modal" aria-hidden="true">Close</button>
   <!--  <button class="btn btn-primary">Save changes</button> -->
  </div>
</div>



<!-- output list of locations.  Click on any should open modal with Location name, and list posts -->
<p>
<% @locations.each do |loc| %>
<div><%= loc.name %>, <%= loc.latitude %>, <%= loc.longitude %></div>
<% end %>
</p>


<!-- 
<div class="myoverlay well">
 Specifics of Location go here.  Then a scrollable comments area underneith.
</div> -->




<script type="text/javascript">


// add an OpenStreetMap tile layer
// L.tileLayer('http://{s}.tile.osm.org/{z}/{x}/{y}.png', {
//     attribution: '&copy; <a href="http://osm.org/copyright">OpenStreetMap</a> contributors'
// }).addTo(map);

// http://developer.mapquest.com/web/products/open/map#add
// http://omarriott.com/aux/leaflet-js-non-geographical-imagery/

var start_lat;
var start_long;

if (navigator.geolocation){
  navigator.geolocation.getCurrentPosition(findPosition);
  console.log("what");
  start_lat =  40;
  start_long = 20; 

}
else {
  console.log("hi");
  start_lat =  40;
  start_long = 20; 
}

function findPosition(position){
  var start_lat =  position.coords.latitude;
  var start_long = position.coords.longitude; 
  console.log("you are at: " +start_lat + ", "+ start_long);
  
}

// replace "toner" here with "terrain" or "watercolor"
var layer = new L.StamenTileLayer("watercolor");
var map = new L.Map("map", {
    center: new L.LatLng(start_lat, start_long),
    zoom: 4
});


//Add street layers to map
var littleton = L.marker([39.61, -105.02]).bindPopup('This is Littleton, CO.'),
    denver    = L.marker([39.74, -104.99]).bindPopup('This is Denver, CO.'),
    aurora    = L.marker([39.73, -104.8]).bindPopup('This is Aurora, CO.'),
    golden    = L.marker([39.77, -105.23]).bindPopup('This is Golden, CO.');
var cities = L.layerGroup([littleton, denver, aurora, golden]);

var cloudmadeUrl = 'http://{s}.tile.cloudmade.com/API-key/{styleId}/256/{z}/{x}/{y}.png',
    cloudmadeAttribution = 'Map data &copy; 2011 OpenStreetMap contributors, Imagery &copy; 2011 CloudMade';

var minimal   = L.tileLayer(cloudmadeUrl, {styleId: 22677, attribution: cloudmadeAttribution}),
    midnight  = L.tileLayer(cloudmadeUrl, {styleId: 999,   attribution: cloudmadeAttribution}),
    motorways = L.tileLayer(cloudmadeUrl, {styleId: 46561, attribution: cloudmadeAttribution});

// var map = L.map('map', {
//     center: new L.LatLng(39.73, -104.99),
//     zoom: 10,
//    layers: [minimal, motorways, cities]
// });

var baseMaps = {
    "Minimal": minimal,
    "Night View": midnight
};

var overlayMaps = {
    "Motorways": motorways,
    "Cities": cities
};

L.control.layers(baseMaps, overlayMaps).addTo(map);

map.addLayer(layer);
//End add layers


// Output all the markers on map
// http://leafletjs.com/reference.html#map
<% @locations.each do |loc| %>
  var marker_<%= loc.id %> = L.marker([<%= loc.latitude %>, <%= loc.longitude %>]).addTo(map);
  marker_<%= loc.id %>.on('click',function(e){
    
    // alert(<%= loc.id %>)
    // window.assign("#location_posts");
    my_loc_id = <%= loc.id %>;
    $('#location_posts').modal('show');
    // Bootstrap jquery functions
    // $('#myModal').modal('toggle');
    // $('#myModal').modal('show');
    // $('#myModal').modal('hide');
  })
<% end %>
// TO DO --------------
// Get the USER id for session!  CHarles!!

// Add a location Sudo code.
// On click in map
//   get lat/long
//   open tool tip and label it Add Location
//     Input fiels for name
//     Cancel and save button
//   On click of save. JSON to POST to create new location
//   Open the new location in the Modal.




// var imageUrl = 'http://www.lib.utexas.edu/maps/historical/newark_nj_1922.jpg',
//     imageBounds = [[ 43.186983, 10.604553], [ 43.206983, 10.704553]];

// L.imageOverlay(imageUrl, imageBounds).addTo(map);

// Playing with Leaflet
// marker_2.bindPopup("Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.").openPopup();


// marker_1.on('click', function(e) {
//     alert(e.latlng); // e is an event object (MouseEvent in this case)
//     console.log(e);
// });
// function show_location_pop( y){
//   marker_2.bindPopup(y).openPopup();
// }

// map.on('click', show_location_pop("My Location"));

// function get_location_data(id){
//   var url = "/locations/" + id + "/posts"
//   $.ajax(url,{
//     content_type: "text/json",
//     complete: function(response){
//       console.log(response);
//     }
//   })
// }


// $("#show_button").click(function(){
//   $(".myoverlay").css("visibility","visible");
// });

// show posts modal
// Clear contents.

// fetch contents of specific Location
$('#location_posts').on('show', function () {
  // console.log("opened");
   $.ajax({
    url: 'locations/' + my_loc_id +'/posts.json',
    method: 'GET',
    contentType: 'application/json',
    datatype: 'json',
    success: function(my_data) {
      console.log(my_data);
      console.log(my_data.name);
    // all this happens if the JSON succeeds.  That's why it's in here.
      $("#location_title").html(my_data.name);

    // Show panoramio
      // var list_ex_options = {'width': 350, 'height': 150, 'columns': 2, 'croppedPhotos': true};
      // var photo_radius = 1;
      // var photo_lat = my_data.latitude;
      // var photo_long = my_data.longitude;
      // var loc_tag = my_data.tag;

      // var photo_area = { 'rect': {'sw': {'lat': photo_lat - photo_radius, 'lng': photo_long - photo_radius }, 'ne': {'lat': photo_lat + photo_radius, 'lng': photo_long + photo_radius }} };
      // var list_ex_widget = new panoramio.PhotoListWidget('div_list_ex', photo_area,  list_ex_options);
      // list_ex_widget.setPosition(0);

      

    //output posts
      // $("#output_posts").reset;
      $("#loc_tag").html(loc_tag);
      // How do I sort the my_data by date, most recent at top
      $.each(my_data.posts, function(i) { $("#output_posts").append("<div class='pull-left'><img width='50' height='50'></div><div><div><strong>" + my_data.posts[i].user.name +"</strong></div><div class='well well-small'>" + my_data.posts[i].content +"</div></div>"); } );

    // Deal with adding a comment
    // Capture teh click on the add_comment_but with jQuery
      $("#add_comment_but").click(function() {
        add_post(my_loc_id, $("#user_comment").val() );
      })


    }
  })
})


 
// When a user submits a new message in the Location Modal, this stores and loads the new messaage.
function add_post(loc_id, post_content) {
  // user_id from session
  console.log(post_content + " - loc_id:" + loc_id);
  //On click of submit button, collect fields from form.


  //Validate that there is a content in the message.


  // Ajax POST the data
  $.ajax({
    type: "POST",
    url: 'locations/' + loc_id +'/posts.json',
    data: { post:  { location_id: loc_id, user_id: 1, content: post_content } }
  }).done(function( msg ) {
    
    console.log(msg);
    console.log(msg.content);
    // $("#output_posts").prepend("<div style='display:none'><strong>Username needed</strong></div><div class='well well-small'>" + msg.content + "</div>").fadeIn('slow'); 

     var liData = "<div style='display:none'><div><strong>Username needed</strong></div><div class='well well-small'>"+ msg.content + "</div></div>";
    $(liData).prependTo('#output_posts').slideDown('slow');

  });


// junk
// $.ajax({
//     url: 'locations/' + my_loc_id +'/posts.json',
//     method: 'GET',
//     contentType: 'application/json',
//     datatype: 'json',
//     success: function(my_data) {

// junk



  // on success, load new message in view

} 
// Sorting Function
// function predicatBy(prop){
//    return function(a,b){
//       if( a[prop] > b[prop]){
//           return 1;
//       }else if( a[prop] < b[prop] ){
//           return -1;
//       }
//       return 0;
//    }
// }

// //Usage
// yourArray.sort( predicatBy("age") );
// yourArray.sort( predicatBy("name") );

</script>